services:
  postgres:
    image: postgres:14
    ports:
      - '5432:5432'
    command:
      - postgres
      - '-cshared_preload_libraries=pg_stat_statements'
      - '-cmax_connections=200'
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=C'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    logging:
      driver: local
      options:
        max-size: 5M
        max-file: '3'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -q -d graph-node -U graph-node
      interval: 1s
      timeout: 5s
      retries: 10
  ipfs:
    image: ipfs/kubo:v0.14.0
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
    logging:
      driver: local
      options:
        max-size: 5M
        max-file: '3'
    healthcheck:
      test:
        - CMD
        - ipfs
        - id
      interval: 1s
      timeout: 5s
      retries: 5
  erpc-latest_no_config_defaults:
    image: ghcr.io/erpc/erpc:latest
    container_name: erpc-latest_no_config_defaults
    expose:
      - '4000:4000'
      - '4001:4001'
    restart: always
  graph-node-uniswap-v2-with-erpc-latest_no_config_defaults:
    image: graphprotocol/graph-node
    container_name: graph-node-uniswap-v2-with-erpc-latest_no_config_defaults
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      ipfs:
        condition: service_healthy
      postgres:
        condition: service_healthy
      erpc-latest_no_config_defaults:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./config:/etc/config
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: ipfs:5001
      GRAPH_NODE_CONFIG: /etc/config/config.uniswap-v2-erpc-latest_no_config_defaults.toml
      GRAPH_LOG: info
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USER: elastic
      ELASTICSEARCH_PASSWORD: changeme
    restart: on-failure
    platform: linux/amd64
  monitoring:
    build: ./monitoring
    ports:
      - '3000:3000'
      - '9090:9090'
    depends_on:
      - graph-node-uniswap-v2-with-erpc-latest_no_config_defaults
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - prometheus_data:/prometheus
      - grafana_data:/var/lib/grafana
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      discovery.type: single-node
      xpack.security.enabled: 'false'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    logging:
      driver: local
      options:
        max-size: 5M
        max-file: '3'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - >-
          http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    ports:
      - '5601:5601'
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    logging:
      driver: local
      options:
        max-size: 5M
        max-file: '3'
volumes:
  prometheus_data: {}
  grafana_data: {}
  esdata: {}
