services:
  postgres:
    image: postgres:14
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    command:
      - postgres
      - "-cshared_preload_libraries=pg_stat_statements"
      - "-cmax_connections=200"
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    logging:
      driver: local
      options:
        max-size: 5M
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d graph-node -U graph-node"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      default: {}

  # ipfs:
  #   image: ipfs/kubo:v0.14.0
  #   ports:
  #     - "${IPFS_PORT:-5001}:5001"
  #   volumes:
  #     - ipfsdata:/data/ipfs
  #   logging:
  #     driver: local
  #     options:
  #       max-size: 5M
  #       max-file: "3"
  #   healthcheck:
  #     test: ["CMD", "ipfs", "id"]
  #     interval: 1s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     default: {}

  graph-node:
    image: 716091368358.dkr.ecr.us-west-2.amazonaws.com/graph-node:v0.35.1.16-clickhouse-8 # graphprotocol/graph-node
    ports:
      - "${GRAPH_NODE_PORT1:-8000}:8000"
      - "${GRAPH_NODE_PORT2:-8001}:8001"
      - "${GRAPH_NODE_PORT3:-8020}:8020"
      - "${GRAPH_NODE_PORT4:-8030}:8030"
      - "${GRAPH_NODE_PORT5:-8040}:8040"
    depends_on:
      # ipfs:
      #   condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./config.toml:/etc/config/config.toml
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: host.docker.internal:5001
      OTEL_SPAN_FILTER: graph_chain_ethereum,reqwest_tracing::reqwest_otel_span_builder
      OTEL_EXPORTER_JAEGER_AGENT_HOST: host.docker.internal
      OTEL_EXPORTER_JAEGER_AGENT_PORT: 6831
      GRAPH_LOG: ${GRAPH_LOG_LEVEL:-error}
      GRAPH_NODE_CONFIG: /etc/config/config.toml
      ERPC_HTTP_PORT: ${ERPC_HTTP_PORT:-4000}
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 10000
      GRAPH_ETHEREUM_MAX_EVENT_ONLY_RANGE: 10000
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 1000
      ETHEREUM_BLOCK_BATCH_SIZE: 1000
      # GRAPH_ETHEREUM_BLOCK_INGESTOR_MAX_CONCURRENT_JSON_RPC_CALLS_FOR_TXN_RECEIPTS: 1000


      # ETHEREUM_BLOCK_BATCH_SIZE: 1000
      # GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 2000
      # GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 20000
      # GRAPH_ETHEREUM_MAX_EVENT_ONLY_RANGE: 20000
      # GRAPH_ETHEREUM_BLOCK_INGESTOR_MAX_CONCURRENT_JSON_RPC_CALLS_FOR_TXN_RECEIPTS: 5000
      # GRAPH_ETHEREUM_BLOCK_RECEIPTS_CHECK_TIMEOUT: 300
      # MAX_CONCURRENT_JSON_RPC_CALLS: 5000
      # GRAPH_ETHEREUM_FETCH_TXN_RECEIPTS_IN_BATCHES: false
    restart: on-failure
    platform: linux/amd64
    networks:
      - default
      - monitoring

volumes:
  ipfsdata: {}
  postgresdata: {}
  esdata: {}

networks:
  default:
    name: ${NETWORK_NAME}
    external: true
  monitoring:
    external: true
    name: monitoring
